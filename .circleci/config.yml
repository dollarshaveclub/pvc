version: 2.1

executors:
  copy_vault_testing_files:
    docker: 
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/dollarshaveclub/pvc

  gobuild_and_test:
    docker:
      - image: circleci/golang:1.14
        environment:
          VAULT_ADDR: "http://vault:8200"
          VAULT_TOKEN: root
          VAULT_TEST_APPID: testing
          VAULT_TEST_USERID: asdf
          VAULT_TEST_TOKEN: root
          VAULT_DEV_ALREADY_RUNNING: 1
      - image: quay.io/dollarshaveclub/vault-dev:master
        name: vault
        environment:      
          VAULT_API_ADDR: "http://0.0.0.0:8200"
          VAULT_ADDR: "http://0.0.0.0:8200"
          VAULT_USE_APP_ID: 1
          VAULT_TEST_APPID: testing
          VAULT_TEST_USERID: asdf
          VAULT_TOKEN: root
        command: | 
          echo "hi"
          echo '"{
                    "tpol": "path \"secret/*\" { policy = \"write\" }"
                 }"' > /opt/policies.json
          echo '"{
                    "secret/development/test_value": "foo"
                  }"' > /opt/secrets.json
          echo '"[
                    {
                      "name": "testing",
                      "policy": "tpol",
                      "user_ids": [
                        "asdf"
                      ]
                    }
                  ]
                  "' > /opt/app-id.json
        entrypoint: /opt/run.sh
    working_directory: /go/src/github.com/dollarshaveclub/pvc
jobs:
  copy: 
    executor: copy_vault_testing_files
    steps: 
      - checkout
      - run: mkdir -p /tmp/opt
      - run: cp /go/src/github.com/dollarshaveclub/pvc/testing/vault_policies.json /tmp/opt/vault_policies.json
      - run: cp /go/src/github.com/dollarshaveclub/pvc/testing/vault_app_ids.json /tmp/opt/vault_app_ids.json
      - run: cp /go/src/github.com/dollarshaveclub/pvc/testing/vault_secrets.json /tmp/opt/vault_secrets.json
      - persist_to_workspace: 
          root: /tmp/opt
          paths:
            - vault_secrets.json
            - vault_app_ids.json
            - vault_policies.json
    
  test:
    executor: gobuild_and_test
    steps: 
      - checkout
      - attach_workspace:
          at: /tmp/opt
      - run: ls .
      - run: ls /tmp
      - run: ls /opt
      - run: ls /tmp/opt
      - setup_remote_docker

      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - run:
          name: Start Vault
          command: |
            set -x
            docker-compose up -d
            # docker-compose will start 2 containers, the one with service will be named `contacts`
            # we start another container with curl in the same network as `contacts`, this way we have
            # all exposed ports from `vault` available on `localhost` in this new container
            docker run --network container:vault \
              appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8200


      - run: go test -v -race -cover

workflows:
  version: 2

  btd:
    jobs:
      - copy
      - test:
          requires:
            - copy
