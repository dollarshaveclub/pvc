version: 2

jobs:
  build:
    docker:
      - image: circleci/golang:1.14
        environment:
          VAULT_ADDR: "http://localhost:8200"
          VAULT_TOKEN: root
          VAULT_TEST_APPID: testing
          VAULT_TEST_USERID: asdf
          VAULT_TEST_TOKEN: root
          VAULT_DEV_ALREADY_RUNNING: 1
    working_directory: /go/src/github.com/dollarshaveclub/pvc
    steps:
      - checkout
      - run: go build 
  test:
    docker:
      - image: circleci/golang:1.14
        environment:
          VAULT_ADDR: "http://vault:8200"
          VAULT_TOKEN: root
          VAULT_TEST_APPID: testing
          VAULT_TEST_USERID: asdf
          VAULT_TEST_TOKEN: root
          VAULT_DEV_ALREADY_RUNNING: 1
    working_directory: /go/src/github.com/dollarshaveclub/pvc
    steps:
      - attach_workspace:
          at: .
      - checkout
      - setup_remote_docker
      - run: |
          docker create -v /cfg --name vault-dev-cfg alpine:3.4 /bin/true
          docker cp ./testing/vault_app_ids.json vault-dev-cfg:/cfg/app-id.json
          docker cp ./testing/vault_secrets.json vault-dev-cfg:/cfg/secrets.json
          docker cp ./testing/vault_policies.json vault-dev-cfg:/cfg/policies.json
          docker run --volumes-from vault-dev-cfg -d --name vault -p 8200:8200 -e "VAULT_USE_APP_ID=1" -e "VAULT_SECRETS_FILE=/cfg/secrets.json" -e "VAULT_APP_ID_FILE=/cfg/app-id.json" -e "VAULT_POLICIES_FILE=/cfg/policies.json" quay.io/dollarshaveclub/vault-dev:master
          sleep 20
      - run:
          name: Running tests
          command: go test -v -race -cover

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
